RSA公钥加密算法是1977年由罗纳德·李维斯特(Ron Rivest)、阿迪·萨莫尔(Adi Shamir)和伦纳德·阿德曼(Leonard Adleman)一起提出的。1987年7月首次在美国公布,当时他们三人都在麻省理工学院工作实习。RSA就是他们三人姓氏开头字母拼在一起组成的。

对极大整数做因数分解的难度决定了 RSA 算法的可靠性。换言之,对一极大整数做因数分解愈困难,RSA 算法愈可靠。假如有人找到一种快速因数分解的算法的话,那么用 RSA 加密的信息的可靠性就会极度下降。但找到这样的算法的可能性是非常小的。今天只有短的 RSA 钥匙才可能被强力方式破解。到2020年为止,世界上还没有任何可靠的攻击RSA算法的方式。只要其钥匙的长度足够长,用RSA加密的信息实际上是不能被破解的。

RSA算法公式
	根据密钥的使用方法,可以将密码分为对称密码和公钥密码
	对称密码:加密和解密使用同一种密钥的方式
	公钥密码:加密和解密使用不同的密码的方式,因此公钥密码通常也称为非对称密码。
	
	RSA的加密过程可以使用一个通式来表达
	密文=明文^E mod N

	也就是说RSA加密是对明文的E次方后除以N后求余数的过程。
	从通式可知,只要知道E和N任何人都可以进行RSA加密了,所以说E、N是RSA加密的密钥,也就是说E和N的组合就是公钥,我们用(E,N)来表示公钥
	公钥=(E,N)

	不过E和N不并不是随便什么数都可以的,它们都是经过严格的数学计算得出的。这里需要注意的是:E是加密(Encryption)的首字母,N是数字(Number)的首字母。

公钥与私钥的产生
	假设爱丽丝想要通过一个不可靠的媒体接收鲍伯的一条私人信息。她可以用以下的方式来产生一个公钥和一个私钥:
		1:随意选择两个大的素数p不等于q,计算N=pq。
		2:根据欧拉函数,求得r=φ(N)=φ(p)xφ(q)=(p-1)(q-1)
		3:选择一个小于r的整数e,使e与r互质。并求得e关于r的模逆元(模逆元也称为模倒数。a^-1 = b mod n),命名为d(求d令ed=1 mod r)。(模逆元存在,当且仅当e与r互质)
		4:将p和q的记录销毁。

	(N,e)是公钥,(N,d)是私钥。爱丽丝将她的公钥(N,e)传给鲍伯,而将她的私钥(N,d)藏起来。

RSA算法定理
	设P为信息明文,两个加密密钥为e1和e2,公共模数是n,则:
	C1 = P^e1 mod n
	C2 = P^e2 mod n

	一、任何大于1的整数a能被因式分解为如下唯一形式:
		a=p1p2…pl(p1,p2,…,pl为素数)

	二、模运算
		①{[a(mod n)]×[b(mod n)]}modn≡(a×b)(mod n)
		②如果(a×b)=(a×c)(mod n),a与n互素,则
		b=c(mod n)

	三、费马定理
		若p是素数,a与p互素,则
		a^(p-1)≡1 (mod p)

	四、欧拉定理
		欧拉函数φ(n)表示不大于n且与n互素的正整数的个数。
		当n是素数,φ(n)=n-1。n=pq,p,q均为素数时,则φ(n)= φ(p)φ(q)=(p-1)(q-1)。
		对于互素的a和n,有a^φ(n)≡1(mod n)

欧拉定理
	在数论中,欧拉定理（也称费马-欧拉定理或欧拉φ函数定理）是一个关于同余的性质。欧拉定理表明，若n,a为正整数，且n,a互素(即gcd(a,n)=1,则a^φ(n)=1 (mod n))

